TOOLCHAIN_TARGET="x86_64-w64-mingw32"
XQMAKESPEC="win32-g++"
inherit toolchain

NAME="mingw64-x86_64-qt5-base"
VERSION=5.9.4
RELEASE=1
CATEGORY="Devel"
SUMMARY="Qt core framework for Win64 toolchain"
DESCRIPTION="Qt is a cross-platform application framework for desktop and
embedded development. Qt enables programmers to create advanced GUI
applications once and deploy them to Windows, Mac OS X and Linux without
rewriting the source code. Companies using Qt can leverage software
investments made on one platform across many others."
HOMEPAGE="https://www.qt.io/"
SRC_URI="http://download.qt.io/official_releases/qt/${VERSION%.*}/${VERSION}/submodules/qtbase-opensource-src-${VERSION}.tar.xz"
SRC_DIR="qtbase-opensource-src-${VERSION}"

# When ANGLE can be built:
#	fedora/0003-Use-external-ANGLE-library.patch
# Do NOT include the dynamic-host-libs patches, they require ELF rpath
PATCH_URI="
	fedora/0005-Make-sure-.pc-files-are-installed-correctly.patch
	fedora/0006-Don-t-add-resource-files-to-LIBS-parameter.patch
	fedora/0007-Prevent-debug-library-names-in-pkg-config-files.patch
	fedora/0016-Rename-qtmain-to-qt5main.patch
	fedora/0019-Use-system-zlib-for-build-tools.patch
	fedora/0020-Disable-determing-default-include-and-lib-dirs-at-qm.patch
	fedora/0021-Use-.dll.a-as-import-lib-extension.patch
	fedora/0022-Merge-shared-and-static-library-trees.patch
	fedora/0026-Fix-macro-invoking-moc-rcc-and-uic.patch
	fedora/0027-Ignore-errors-about-missing-feature-static.patch
	fedora/0028-Enable-and-fix-use-of-iconv.patch
	fedora/0029-Ignore-failing-pkg-config-test.patch
	fedora/0030-Prevent-qmake-from-messing-static-lib-dependencies.patch
	5.9-cygwin-mkspecs.patch
	5.9-cygwin-qmake.patch
	5.9-cygwin-unix.patch
	5.5.1-makedepend.patch
	5.9-no-undefined.patch
	5.9-mingw-configure.patch
	5.9-mingw-mkspecs.patch
"

# this is mostly cross-compiled, the native tools are only a small part
RESTRICT="debuginfo"

# loaded dynamically
REQUIRES="mingw64-x86_64-openssl"
# native objdump cannot read PE+ binaries :-(
if defined ARCH_i686
then
REQUIRES+=" mingw64-x86_64-dbus mingw64-x86_64-freetds mingw64-x86_64-freetype2 mingw64-x86_64-gcc-core mingw64-x86_64-gcc-g++ mingw64-x86_64-harfbuzz mingw64-x86_64-libjpeg-turbo mingw64-x86_64-libpng mingw64-x86_64-mariadb-connector-c mingw64-x86_64-pcre2 mingw64-x86_64-postgresql mingw64-x86_64-sqlite3 mingw64-x86_64-win-iconv mingw64-x86_64-zlib"
fi

# qmake/moc/uic/rcc are built native, libraries are cross-compiled
# therefore, these need to be determined by mkspecs
unset CC CXX
CFLAGS+=" -Wno-deprecated-declarations -fno-delete-null-pointer-checks -fno-keep-inline-dllexport -fno-stack-protector"
CXXFLAGS+=" -Wno-deprecated-declarations -fno-delete-null-pointer-checks -fno-keep-inline-dllexport -fno-stack-protector"

src_compile() {
	mkdir -p ${B}/shared
	cd ${B}/shared

	${S}/configure \
		-hostprefix /usr/lib/qt5/${TOOLCHAIN_TARGET} \
		-prefix ${TOOLCHAIN_PREFIX} \
		-bindir ${TOOLCHAIN_BINDIR} \
		-headerdir ${TOOLCHAIN_INCLUDEDIR}/qt5 \
		-libdir ${TOOLCHAIN_LIBDIR} \
		-archdatadir ${TOOLCHAIN_DATADIR}/qt5 \
		-plugindir ${TOOLCHAIN_LIBDIR}/qt5/plugins \
		-importdir ${TOOLCHAIN_LIBDIR}/qt5/imports \
		-qmldir ${TOOLCHAIN_LIBDIR}/qt5/qml \
		-libexecdir ${TOOLCHAIN_BINDIR} \
		-datadir ${TOOLCHAIN_DATADIR}/qt5 \
		-docdir ${TOOLCHAIN_DATADIR}/qt5/doc \
		-sysconfdir ${TOOLCHAIN_PREFIX}/etc/qt5 \
		-translationdir ${TOOLCHAIN_DATADIR}/qt5/translations \
		-examplesdir ${TOOLCHAIN_LIBDIR}/qt5/examples \
		-testsdir ${TOOLCHAIN_LIBDIR}/qt5/tests \
		-platform cygwin-g++ \
		-xplatform ${XQMAKESPEC} \
		-device-option CROSS_COMPILE=${TOOLCHAIN_TARGET}- \
		-confirm-license -opensource \
		-optimized-qmake \
		-force-pkg-config \
		-release -shared \
		-no-rpath -no-reduce-exports -no-reduce-relocations \
		-plugin-sql-mysql -mysql_config ${TOOLCHAIN_BINDIR}/mysql_config \
		-plugin-sql-odbc \
		-plugin-sql-psql \
		-plugin-sql-sqlite -system-sqlite \
		-plugin-sql-tds \
		-no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-sqlite2 \
		-system-zlib -system-libpng -system-libjpeg \
		-dbus -openssl -system-pcre \
		-no-fontconfig -system-harfbuzz -system-freetype \
		-gui -widgets -no-cups -no-icu -iconv \
		-opengl desktop -no-egl -no-glib \
		-nomake examples \
		`${TOOLCHAIN_TARGET}-pkg-config --cflags-only-I freetype2 dbus-1` \
		QMAKE_CFLAGS_RELEASE="${CFLAGS}" \
		QMAKE_CXXFLAGS_RELEASE="${CXXFLAGS}" \
		QMAKE_STRIP= \
		|| error "configure failed"

	cygmake

	return 0  ## disable static

	mkdir -p ${B}/static
	cd ${B}/static

	${S}/configure \
		-hostprefix /usr/lib/qt5/${TOOLCHAIN_TARGET} \
		-prefix ${TOOLCHAIN_PREFIX} \
		-bindir ${TOOLCHAIN_BINDIR} \
		-headerdir ${TOOLCHAIN_INCLUDEDIR}/qt5 \
		-libdir ${TOOLCHAIN_LIBDIR} \
		-archdatadir ${TOOLCHAIN_DATADIR}/qt5 \
		-plugindir ${TOOLCHAIN_LIBDIR}/qt5/plugins \
		-importdir ${TOOLCHAIN_LIBDIR}/qt5/imports \
		-qmldir ${TOOLCHAIN_LIBDIR}/qt5/qml \
		-libexecdir ${TOOLCHAIN_BINDIR} \
		-datadir ${TOOLCHAIN_DATADIR}/qt5 \
		-docdir ${TOOLCHAIN_DATADIR}/qt5/doc \
		-sysconfdir ${TOOLCHAIN_PREFIX}/etc/qt5 \
		-translationdir ${TOOLCHAIN_DATADIR}/qt5/translations \
		-examplesdir ${TOOLCHAIN_LIBDIR}/qt5/examples \
		-testsdir ${TOOLCHAIN_LIBDIR}/qt5/tests \
		-platform cygwin-g++ \
		-xplatform ${XQMAKESPEC} \
		-device-option CROSS_COMPILE=${TOOLCHAIN_TARGET}- \
		-confirm-license -opensource \
		-optimized-qmake \
		-force-pkg-config \
		-release -static \
		-no-rpath -no-reduce-exports -no-reduce-relocations \
		-no-sql-mysql \
		-qt-sql-odbc \
		-no-sql-psql \
		-qt-sql-sqlite -system-sqlite \
		-no-sql-tds \
		-no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-sqlite2 \
		-system-zlib -system-libpng -system-libjpeg \
		-dbus -openssl -system-pcre \
		-no-fontconfig -system-harfbuzz -system-freetype \
		-gui -widgets -no-cups -no-icu -iconv \
		-no-xcb -no-xkbcommon \
		-opengl dynamic -no-glib \
		-nomake examples \
		`${TOOLCHAIN_TARGET}-pkg-config --cflags-only-I freetype2 dbus-1` \
		QMAKE_CFLAGS_RELEASE="${CFLAGS}" \
		QMAKE_CXXFLAGS_RELEASE="${CXXFLAGS}" \
		QMAKE_STRIP= \
		|| error "configure failed"

	cygmake
}

src_install() {
	local x d

#	cd ${B}/static
#	cygmake INSTALL_ROOT=${D} install
	cd ${B}/shared
	cygmake INSTALL_ROOT=${D} install

	# DLLS are installed to both bindir and libdir, only need one
	rm -f ${D}${TOOLCHAIN_LIBDIR}/*.dll

	dodir /usr/bin
	pushd ${D}/usr/lib/qt5/${TOOLCHAIN_TARGET}/bin
	for x in *
	do
		x5=${x%.*}-qt5.${x#*.}
		dosym ../lib/qt5/${TOOLCHAIN_TARGET}/bin/${x} /usr/bin/${TOOLCHAIN_TARGET}-${x5%.*}
	done
	popd

	pushd ${D}/usr/lib/qt5/${TOOLCHAIN_TARGET}/mkspecs
	# remove all mkspecs not required for this host or host_build
	for d in *
	do
		case $d in
		common|features|modules|cygwin-g*|${XQMAKESPEC}|*.pri) ;;
		*)      rmdirs+=" $d" ;;
		esac
	done
	rm -fr ${rmdirs}
	ln -s ${XQMAKESPEC} default
	ln -s cygwin-g++ default-host
	# remove package-specific flags from qmake configuration
	sed -i -e 's| -fdebug-prefix[^ ]*||g' qmodule.pri
	popd

	sed -i -e '/^Libs\.private/s/-luuid/-Wl,&/g' ${D}${TOOLCHAIN_LIBDIR}/pkgconfig/*.pc

	dodoc ${S}/LGPL_EXCEPTION.txt ${S}/LICENSE.{FDL,*GPL}
}

DIFF_EXCLUDES="3rdparty"
